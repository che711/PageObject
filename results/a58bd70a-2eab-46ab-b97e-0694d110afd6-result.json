{"name": "test_guest_can_add_product_to_basket[http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Книги разные\nassert 'Coders at Work' == 'Coders at Work book'\n  - Coders at Work book\n  ?               -----\n  + Coders at Work", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7991dae13d38c5821ea5c556205d2ce8\")>\nlink = 'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'\n\n    @pytest.mark.parametrize('link', [\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer0\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer1\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer2\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer3\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer4\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer5\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer6\",\n                                      pytest.param(\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7\", marks=pytest.mark.xfail),\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer8\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer9\"])\n    \n    def test_guest_can_add_product_to_basket(browser, link):\n        page = ProductPage(browser, link)\n        page.open()\n        name1 = browser.find_element(*ProductPageLocators.NAME_BOOK)\n        book1 = name1.text\n        css_price1 = browser.find_element(*ProductPageLocators.PRICE_BOOK)\n        price1 = css_price1.text\n        page2 = ProductPage(browser, link)\n        page2.open()\n        add_basket = browser.find_element(*ProductPageLocators.BUTTON_BASKET)\n        add_basket.click()\n        promt = ProductPage(browser, link)\n        promt.solve_quiz_and_get_code()\n        time.sleep(2)\n        promt = browser.find_element(*ProductPageLocators.ADD_NAME_BOOK)\n        book2 = promt.text\n        css_price2 = browser.find_element(*ProductPageLocators.ADD_PRICE_BOOK)\n        price2 = css_price2.text\n        assert (price1 == price2), \"Цены разные\"\n>       assert (book1 == book2), \"Книги разные\"\nE       AssertionError: Книги разные\nE       assert 'Coders at Work' == 'Coders at Work book'\nE         - Coders at Work book\nE         ?               -----\nE         + Coders at Work\n\ntest_product_page.py:110: AssertionError"}, "parameters": [{"name": "link", "value": "'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'"}], "start": 1627741364420, "stop": 1627741369605, "uuid": "d0da2446-55df-466b-a936-2a1535244868", "historyId": "2337e2b0542ff21ff06031a45c664572", "testCaseId": "d1f983c76b7e8a55c7c09e84c59edee2", "fullName": "test_product_page#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_product_page"}, {"name": "host", "value": "andrew-HP"}, {"name": "thread", "value": "11223-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}